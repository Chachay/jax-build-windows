name: Windows Build
on: [workflow_dispatch]
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2019
            cuda: "11.7.1"
            compiler: "Visual Studio 16 2019"
    runs-on: ${{ matrix.os }}
    env:
      BAZEL_PATH: "D:\\bazel.exe"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: configure Pagefile
        uses: al-cheb/configure-pagefile-action@v1.2
        with:
          minimum-size: 8GB
          maximum-size: 16GB
          disk-root: "C:"

      - uses: Jimver/cuda-toolkit@v0.2.10
        id: cuda-toolkit
        with:
          method: 'network'
          cuda: '11.7.1'
          sub-packages: '["nvcc", "cupti", "nvtx","visual_profiler", "nvprof", "cublas", "cublas_dev", "nvjpeg", "nvjpeg_dev", "npp", "npp_dev", "cufft", "cufft_dev", "nvrtc", "nvrtc_dev", "curand", "curand_dev", "cusolver", "cusolver_dev", "cusparse", "cusparse_dev", "nvml_dev", "cudart", "visual_studio_integration", "thrust"]'

      - name: install cudnn
        shell: pwsh
        run: .\scripts\install_cuda.ps1

      - name: Download Bazel
        run: curl -k -L https://github.com/bazelbuild/bazelisk/releases/download/v1.10.1/bazelisk-windows-amd64.exe -o $env:BAZEL_PATH

      - name: check Env
        shell: pwsh
        run: |
          Write-Output "---- NVCC Output ----"
          nvcc -V
          Write-Output "---------------------"
          Write-Output "CUDA PATH: $($env:CUDA_PATH)"
          Write-Output "Path: $($env:Path)"
#         Copy-Item -Path "$($Env:ProgramFiles)\NVIDIA GPU Computing Toolkit\CUDA\v11.7\extras\visual_studio_integration\MSBuildExtensions\*" `
#         -Destination "$(${Env:ProgramFiles})\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\BuildCustomizations"

      - name: build jaxlib
        id: configure
        shell: pwsh
        run: |
          cd .\jax
          python -m pip install numpy
          python build/build.py --enable_cuda `
            --cuda_path="C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.7" `
            --cudnn_path="C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.7" `
            --cuda_version="11.7" `
            --cudnn_version="8.5.0" `
            --bazel_path="$($env:BAZEL_PATH)"

      - name: Archive production artifacts build
        uses: actions/upload-artifact@v3
        with:
          name: jax-library
          path: |
            .\dist\*.whl
